// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using SYSProject.DataAccess.Concrete.EntityFramework.Contexts;

namespace SYSProject.DataAccess.Migrations
{
    [DbContext(typeof(SYSInterviewContext))]
    [Migration("20211111103543_InitialCreate")]
    partial class InitialCreate
    {
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("Relational:MaxIdentifierLength", 128)
                .HasAnnotation("ProductVersion", "5.0.12")
                .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

            modelBuilder.Entity("SYSProject.Core.Entities.Concrete.User", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("Email")
                        .HasColumnType("nvarchar(max)");

                    b.Property<string>("FirstName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .HasColumnType("nvarchar(max)");

                    b.Property<byte[]>("PasswordHash")
                        .HasColumnType("varbinary(max)");

                    b.Property<byte[]>("PasswordSalt")
                        .HasColumnType("varbinary(max)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.Property<string>("UserName")
                        .HasColumnType("nvarchar(max)");

                    b.HasKey("Id");

                    b.ToTable("Users");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2021, 11, 11, 13, 35, 42, 830, DateTimeKind.Local).AddTicks(2122),
                            Email = "taylanaltun@gmail.com",
                            FirstName = "Taylan",
                            IsDeleted = false,
                            LastName = "Altun",
                            PasswordHash = new byte[] { 160, 75, 104, 157, 147, 42, 66, 37, 212, 214, 7, 46, 148, 53, 200, 24, 15, 66, 85, 5, 134, 111, 227, 172, 221, 201, 153, 192, 1, 196, 251, 190, 80, 210, 34, 51, 248, 52, 30, 225, 138, 186, 154, 15, 21, 132, 125, 80, 222, 99, 207, 23, 119, 41, 49, 8, 89, 23, 108, 188, 186, 13, 146, 138 },
                            PasswordSalt = new byte[] { 67, 50, 197, 17, 167, 201, 177, 146, 112, 254, 181, 147, 60, 130, 4, 219, 76, 228, 177, 235, 57, 23, 19, 170, 215, 227, 77, 121, 75, 238, 8, 250, 185, 196, 116, 51, 4, 146, 146, 49, 155, 77, 212, 49, 34, 171, 76, 63, 232, 105, 110, 121, 83, 203, 22, 174, 215, 131, 168, 69, 143, 7, 105, 56, 191, 57, 116, 221, 142, 126, 36, 109, 186, 50, 178, 54, 205, 93, 235, 235, 102, 70, 100, 11, 11, 5, 119, 150, 72, 142, 30, 165, 213, 125, 201, 6, 187, 249, 241, 164, 171, 179, 43, 170, 114, 90, 193, 185, 62, 131, 110, 226, 67, 47, 41, 46, 197, 70, 136, 210, 7, 56, 42, 16, 164, 137, 202, 137 },
                            UserName = "Taylan"
                        });
                });

            modelBuilder.Entity("SYSProject.Entities.Concrete.Product", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint")
                        .HasAnnotation("SqlServer:ValueGenerationStrategy", SqlServerValueGenerationStrategy.IdentityColumn);

                    b.Property<decimal>("BuyUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long>("CreatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("CreatedDate")
                        .HasColumnType("datetime2");

                    b.Property<long?>("DeletedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("DeletedDate")
                        .HasColumnType("datetime2");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("bit");

                    b.Property<string>("Name")
                        .HasColumnType("nvarchar(max)");

                    b.Property<decimal>("SaleUnitPrice")
                        .HasColumnType("decimal(18,2)");

                    b.Property<long?>("UpdatedBy")
                        .HasColumnType("bigint");

                    b.Property<DateTime?>("UpdatedDate")
                        .HasColumnType("datetime2");

                    b.HasKey("Id");

                    b.ToTable("Products");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            BuyUnitPrice = 700m,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2021, 11, 11, 13, 35, 42, 825, DateTimeKind.Local).AddTicks(7346),
                            IsDeleted = false,
                            Name = "Ürün1",
                            SaleUnitPrice = 1000m
                        },
                        new
                        {
                            Id = 2L,
                            BuyUnitPrice = 400m,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2021, 11, 11, 13, 35, 42, 826, DateTimeKind.Local).AddTicks(7411),
                            IsDeleted = false,
                            Name = "Ürün2",
                            SaleUnitPrice = 500m
                        },
                        new
                        {
                            Id = 3L,
                            BuyUnitPrice = 5000m,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2021, 11, 11, 13, 35, 42, 826, DateTimeKind.Local).AddTicks(7427),
                            IsDeleted = false,
                            Name = "Ürün3",
                            SaleUnitPrice = 7000m
                        },
                        new
                        {
                            Id = 4L,
                            BuyUnitPrice = 2000m,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2021, 11, 11, 13, 35, 42, 826, DateTimeKind.Local).AddTicks(7429),
                            IsDeleted = false,
                            Name = "Ürün4",
                            SaleUnitPrice = 2800m
                        },
                        new
                        {
                            Id = 5L,
                            BuyUnitPrice = 6000m,
                            CreatedBy = 1L,
                            CreatedDate = new DateTime(2021, 11, 11, 13, 35, 42, 826, DateTimeKind.Local).AddTicks(7431),
                            IsDeleted = false,
                            Name = "Ürün5",
                            SaleUnitPrice = 9000m
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
